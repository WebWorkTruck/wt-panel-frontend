/**
 * Generated by orval v6.19.1 üç∫
 * Do not edit manually.
 * WT PANEL
 * OpenAPI spec version: 1.0.0
 */
import { createInstance } from './api-instance'
import type { BodyType } from './api-instance'
export type ProductsControllerGetProductsParams = {
  q?: string
  page: string
  count: string
}

export type PanelControllerGetMissedCallsParams = {
  page: string
  count: string
}

export type PanelControllerGetReturnsParams = {
  page: string
  count: string
}

export type PanelControllerGetCancelsParams = {
  page: string
  count: string
}

export type PanelControllerGetApplicationSaleParams = {
  title: string
  type: string
  page: string
  count: string
  text: string
}

export interface ProductDto {
  article: string
  comment: string
  cost: string
  indcode: string
  name: string
  photos: string[]
  sklad: string
}

export interface ProductInfo {
  count: number
  pages: number
}

export interface ProductsResponse {
  data: ProductDto[]
  info: ProductInfo
}

export interface ReqRefusalDto {
  id: string
}

export interface Bill {
  id: string
  name: string
}

export interface BillsInfo {
  count: number
  data: Bill[]
}

export interface OrgsBills {
  bills: BillsInfo
  orgs: OrgsInfo
}

export interface Org {
  id: string
  name: string
}

export interface OrgsInfo {
  count: number
  data: Org[]
}

export interface CreateSaleDto {
  bill: string
  id: string
  org: string
}

export interface MoveApplicationSaleDto {
  id: string
  move_myself: boolean
  processing: string
  sub_processing: string
  type: string
}

export interface PorterDto {
  id: string
  name: string
  phone: string
}

export interface ResponsibleDto {
  id: string
  name: string
  phone: string
}

export interface DataDto {
  client: string
  flag: number
  id: string
  porter: PorterDto
  processing: string
  responsible: ResponsibleDto
  sub_processing: string
}

export interface InfoDto {
  count: number
  pages: number
}

export interface ApplicationSaleDto {
  data: DataDto[]
  info: InfoDto
}

export interface Category {
  count: number
  title: string
  type: string
}

export interface BadApplication {
  count: string
  state: string
}

export interface Role {
  id: string
  title: string
}

export interface SessionInfoDto {
  birth_date: string
  company: string
  id: string
  name: string
  personal_phone: string
  post: string
  roles: Role[]
  work_phone: string
}

export interface SignInRequestDto {
  password: string
  phone: string
}

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never

/**
 * @summary –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ 1C
 */
export const authControllerSignInOneC = (
  signInRequestDto: BodyType<SignInRequestDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/auth/sign-in-one-c`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: signInRequestDto,
    },
    options,
  )
}

/**
 * @summary –í—ã—Ö–æ–¥ –∏–∑ —Å–µ—Å—Å–∏–∏
 */
export const authControllerSignOut = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    { url: `/auth/sign-out`, method: 'post' },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏
 */
export const authControllerGetSessionInfo = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<SessionInfoDto>(
    { url: `/auth/session-info`, method: 'get' },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ—Ç–∫–∞–∑–∞—Ö, –≤–æ–∑–≤—Ä–∞—Ç–∞—Ö, –∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–≤–æ–Ω–∫–∞—Ö
 */
export const panelControllerGetBadApplications = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<BadApplication[]>(
    { url: `/panel/bad-applications`, method: 'get' },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 */
export const panelControllerGetCategories = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Category[]>(
    { url: `/panel/categories`, method: 'get' },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –∏ –ø—Ä–æ–¥–∞–∂
 */
export const panelControllerGetApplicationSale = (
  params: PanelControllerGetApplicationSaleParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<ApplicationSaleDto>(
    { url: `/panel/applications-sales`, method: 'get', params },
    options,
  )
}

/**
 * @summary –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –∏ –ø—Ä–æ–¥–∞–∂
 */
export const panelControllerMoveApplicationSale = (
  moveApplicationSaleDto: BodyType<MoveApplicationSaleDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/panel/move-application-sale`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: moveApplicationSaleDto,
    },
    options,
  )
}

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏
 */
export const panelControllerCreateSale = (
  createSaleDto: BodyType<CreateSaleDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/panel/create-sale`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: createSaleDto,
    },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Å—á–µ—Ç–æ–≤
 */
export const panelControllerGetOrgsBills = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<OrgsBills>(
    { url: `/panel/organizations-bills`, method: 'get' },
    options,
  )
}

/**
 * @summary –û—Ç–∫–∞–∑—ã
 */
export const panelControllerGetCancels = (
  params: PanelControllerGetCancelsParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<ApplicationSaleDto>(
    { url: `/panel/cancels`, method: 'get', params },
    options,
  )
}

/**
 * @summary –í–æ–∑–≤—Ä–∞—Ç—ã
 */
export const panelControllerGetReturns = (
  params: PanelControllerGetReturnsParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<OrgsBills>(
    { url: `/panel/returns`, method: 'get', params },
    options,
  )
}

/**
 * @summary –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏
 */
export const panelControllerGetMissedCalls = (
  params: PanelControllerGetMissedCallsParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<OrgsBills>(
    { url: `/panel/missed-calls`, method: 'get', params },
    options,
  )
}

/**
 * @summary –ü–µ—Ä–µ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –æ—Ç–∫–∞–∑
 */
export const panelControllerRefusalApplication = (
  reqRefusalDto: BodyType<ReqRefusalDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<OrgsBills>(
    {
      url: `/panel/refusal`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: reqRefusalDto,
    },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É
 */
export const productsControllerGetProducts = (
  params: ProductsControllerGetProductsParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<ProductsResponse>(
    { url: `/products`, method: 'get', params },
    options,
  )
}

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
 */
export const productsControllerGetProduct = (
  id: string,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<ProductsResponse>(
    { url: `/products/${id}`, method: 'get' },
    options,
  )
}

export type AuthControllerSignInOneCResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignInOneC>>
>
export type AuthControllerSignOutResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignOut>>
>
export type AuthControllerGetSessionInfoResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetSessionInfo>>
>
export type PanelControllerGetBadApplicationsResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetBadApplications>>
>
export type PanelControllerGetCategoriesResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetCategories>>
>
export type PanelControllerGetApplicationSaleResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetApplicationSale>>
>
export type PanelControllerMoveApplicationSaleResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerMoveApplicationSale>>
>
export type PanelControllerCreateSaleResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerCreateSale>>
>
export type PanelControllerGetOrgsBillsResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetOrgsBills>>
>
export type PanelControllerGetCancelsResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetCancels>>
>
export type PanelControllerGetReturnsResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetReturns>>
>
export type PanelControllerGetMissedCallsResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerGetMissedCalls>>
>
export type PanelControllerRefusalApplicationResult = NonNullable<
  Awaited<ReturnType<typeof panelControllerRefusalApplication>>
>
export type ProductsControllerGetProductsResult = NonNullable<
  Awaited<ReturnType<typeof productsControllerGetProducts>>
>
export type ProductsControllerGetProductResult = NonNullable<
  Awaited<ReturnType<typeof productsControllerGetProduct>>
>
